using Avalonia.Media;

namespace Monitor.ViewModels;

public static class MetricIcon
{
    public static Lazy<StreamGeometry> CpuUsage = new(() => StreamGeometry.Parse(
        "M14 8C15.1046 8 16 8.89543 16 10V14C16 15.1046 15.1046 16 14 16H10C8.89543 16 8 15.1046 8 14V10C8 8.89543 8.89543 8 10 8H14ZM13 10C13.5523 10 14 10.4477 14 11V13C14 13.5523 13.5523 14 13 14H11C10.4477 14 10 13.5523 10 13V11C10 10.4477 10.4477 10 11 10H13ZM11 2C11 1.44772 11.4477 1 12 1C12.5523 1 13 1.44772 13 2V4H15V2C15 1.44772 15.4477 1 16 1C16.5523 1 17 1.44772 17 2V4C18.6569 4 20 5.34315 20 7H22C22.5523 7 23 7.44771 23 8C23 8.55229 22.5523 9 22 9H20V11H22C22.5523 11 23 11.4477 23 12C23 12.5523 22.5523 13 22 13H20V15H22C22.5523 15 23 15.4477 23 16C23 16.5523 22.5523 17 22 17H20C20 18.6569 18.6569 20 17 20V22C17 22.5523 16.5523 23 16 23C15.4477 23 15 22.5523 15 22V20H13V22C13 22.5523 12.5523 23 12 23C11.4477 23 11 22.5523 11 22V20H9V22C9 22.5523 8.55229 23 8 23C7.44771 23 7 22.5523 7 22V20C5.34315 20 4 18.6569 4 17H2C1.44772 17 1 16.5523 1 16C1 15.4477 1.44772 15 2 15H4V13H2C1.44772 13 1 12.5523 1 12C1 11.4477 1.44772 11 2 11H4V9H2C1.44772 9 1 8.55229 1 8C1 7.44771 1.44772 7 2 7H4C4 5.34315 5.34315 4 7 4V2C7 1.44772 7.44771 1 8 1C8.55229 1 9 1.44772 9 2V4H11V2ZM17 6C17.5523 6 18 6.44772 18 7V17C18 17.5523 17.5523 18 17 18H7C6.44771 18 6 17.5523 6 17V7C6 6.44771 6.44772 6 7 6H17Z"));

    public static Lazy<StreamGeometry> RamUsage = new(() => StreamGeometry.Parse(
        "M13.78,13.25V3.84C13.78,1.72,15.5,0,17.62,0s3.84,1.72,3.84,3.84v9.41h9.73V3.84c0-2.12,1.72-3.84,3.84-3.84 c2.12,0,3.84,1.72,3.84,3.84v9.41h9.73V3.84c0-2.12,1.72-3.84,3.84-3.84c2.12,0,3.84,1.72,3.84,3.84v9.41h9.73V3.84 c0-2.12,1.72-3.84,3.84-3.84c2.12,0,3.84,1.72,3.84,3.84v9.41h9.73V3.84c0-2.12,1.72-3.84,3.84-3.84c2.12,0,3.84,1.72,3.84,3.84 v9.41h9.73V3.84c0-2.12,1.72-3.84,3.84-3.84c2.12,0,3.84,1.72,3.84,3.84v9.41h8.6c1.59,0,3.03,0.65,4.07,1.69 c1.04,1.04,1.69,2.48,1.69,4.07v60.66c0,1.57-0.65,3.01-1.69,4.06l0.01,0.01c-1.04,1.04-2.48,1.69-4.07,1.69h-8.6v8.82 c0,2.12-1.72,3.84-3.84,3.84c-2.12,0-3.84-1.72-3.84-3.84v-8.82h-9.73v8.82c0,2.12-1.72,3.84-3.84,3.84 c-2.12,0-3.84-1.72-3.84-3.84v-8.82H73.7v8.82c0,2.12-1.72,3.84-3.84,3.84c-2.12,0-3.84-1.72-3.84-3.84v-8.82h-9.73v8.82 c0,2.12-1.72,3.84-3.84,3.84c-2.12,0-3.84-1.72-3.84-3.84v-8.82h-9.73v8.82c0,2.12-1.72,3.84-3.84,3.84 c-2.12,0-3.84-1.72-3.84-3.84v-8.82h-9.73v8.82c0,2.12-1.72,3.84-3.84,3.84s-3.84-1.72-3.84-3.84v-8.82H5.75 c-1.59,0-3.03-0.65-4.07-1.69C0.65,82.69,0,81.25,0,79.67V19.01c0-1.59,0.65-3.03,1.69-4.07c0.12-0.12,0.25-0.23,0.38-0.33 c1.01-0.84,2.29-1.35,3.69-1.35H13.78L13.78,13.25z M115.2,20.93H7.68v56.81H115.2V20.93L115.2,20.93z"));
    
    public static Lazy<StreamGeometry> DiskUsage = new(() => StreamGeometry.Parse(
        "M4.994 0C3.736.015 2.815-.03 2.063.385a1.88 1.88 0 0 0-.838.998C1.06 1.822 1 2.343 1 3v10c0 .658.06 1.179.225 1.617.164.439.461.79.838.998.752.416 1.673.37 2.931.385H10.006c1.258-.014 2.179.03 2.932-.385a1.88 1.88 0 0 0 .838-.998c.164-.438.224-.96.224-1.617V3c0-.658-.06-1.178-.225-1.617a1.88 1.88 0 0 0-.837-.998C12.185-.03 11.264.015 10.006 0H4.998zM5 1h5c1.259.015 2.087.06 2.453.262.184.101.29.213.387.472.097.26.16.674.16 1.266v10c0 .592-.063 1.006-.16 1.266-.098.26-.203.371-.387.472-.366.202-1.194.247-2.453.262H5c-1.258-.015-2.09-.06-2.455-.262-.183-.1-.287-.212-.385-.472C2.063 14.006 2 13.592 2 13V3c0-.592.063-1.006.16-1.266.098-.26.202-.371.385-.472C2.91 1.06 3.74 1.015 5 1zM7.795 5.012a4.487 4.487 0 0 0-3.033.918 4.506 4.506 0 0 0-1.16 5.82 4.508 4.508 0 0 0 5.62 1.908 4.51 4.51 0 0 0 2.628-5.324l-.131-.482-.967.26.13.482a3.494 3.494 0 0 1-2.042 4.139 3.494 3.494 0 0 1-4.371-1.483 3.494 3.494 0 0 1 5.12-4.547l-.644.645.707.707.676-.676h.002l.354-.355.353-.352-.353-.353a4.494 4.494 0 0 0-2.889-1.307zM7.5 8A1.5 1.5 0 0 0 6 9.5 1.5 1.5 0 0 0 7.5 11 1.5 1.5 0 0 0 9 9.5 1.5 1.5 0 0 0 7.5 8zm0 1a.5.5 0 0 1 .5.5.5.5 0 0 1-.5.5.5.5 0 0 1-.5-.5.5.5 0 0 1 .5-.5z"));

    public static Lazy<StreamGeometry> NetworkUsage = new(() => StreamGeometry.Parse(
        "M12.0000002,1.99896738 C17.523704,1.99896738 22.0015507,6.47681407 22.0015507,12.0005179 C22.0015507,17.5242217 17.523704,22.0020684 12.0000002,22.0020684 C6.47629639,22.0020684 1.99844971,17.5242217 1.99844971,12.0005179 C1.99844971,6.47681407 6.47629639,1.99896738 12.0000002,1.99896738 Z M14.9389045,16.5002571 L9.06109593,16.5002571 C9.71313678,18.9143799 10.8464883,20.5020684 12.0000002,20.5020684 C13.1535121,20.5020684 14.2868636,18.9143799 14.9389045,16.5002571 Z M7.50830976,16.5008106 L4.78582644,16.5006803 C5.744167,18.0337454 7.17761035,19.2393418 8.87999355,19.9113065 C8.35771536,19.0914835 7.92672586,18.0651949 7.60972411,16.8958162 L7.50830976,16.5008106 L7.50830976,16.5008106 Z M19.214174,16.5006803 L16.4916907,16.5008106 C16.167923,17.8345819 15.700316,19.000392 15.1189501,19.9113639 C16.7159251,19.2813431 18.0755983,18.1823607 19.0289676,16.7842422 L19.214174,16.5006803 L19.214174,16.5006803 Z M7.09342418,9.9998686 L3.73581796,9.9998686 L3.73581796,9.9998686 L3.73106043,10.0170734 C3.57897914,10.6534279 3.49844971,11.3175685 3.49844971,12.0005179 C3.49844971,13.0566718 3.69103899,14.0678442 4.04301473,15.000832 L7.21617552,15.0004667 C7.07387589,14.0513637 6.99844971,13.0431468 6.99844971,12.0005179 C6.99844971,11.3165055 7.03091285,10.6473039 7.09342418,9.9998686 Z M15.3969276,9.99993255 L8.60307281,9.99993255 C8.53505119,10.640197 8.49844971,11.3099099 8.49844971,12.0005179 C8.49844971,13.0600224 8.5845969,14.070347 8.73818201,15.000607 L15.2618184,15.000607 C15.4154035,14.070347 15.5015507,13.0600224 15.5015507,12.0005179 C15.5015507,11.3099099 15.4649492,10.640197 15.3969276,9.99993255 Z M20.2646076,9.999033 L16.9065762,9.99988793 C16.9690876,10.6473039 17.0015507,11.3165055 17.0015507,12.0005179 C17.0015507,13.0431468 16.9261245,14.0513637 16.7838249,15.0004667 L19.9569857,15.000832 C20.3089614,14.0678442 20.5015507,13.0566718 20.5015507,12.0005179 C20.5015507,11.3111121 20.4194915,10.6408723 20.2646076,9.999033 Z M8.88105029,4.0896719 L8.85814489,4.09838857 C6.81083065,4.91309834 5.15481653,6.500408 4.25014894,8.50027116 L7.29826946,8.50063757 C7.61162388,6.74784533 8.15846945,5.22192073 8.88105029,4.0896719 Z M12.0000002,3.49896738 L11.8843481,3.50426666 C10.6189068,3.62002448 9.39642826,5.62198962 8.82871306,8.50021862 L15.1712874,8.50021862 C14.6051632,5.63005613 13.3879407,3.63125276 12.1262908,3.50528435 L12.0000002,3.49896738 Z M15.1200069,4.08972931 L15.2268438,4.26382329 C15.8960528,5.37628985 16.4041675,6.83617446 16.701731,8.50063757 L19.7498515,8.50027116 C18.8852005,6.58886886 17.3342021,5.05432991 15.4112068,4.21100469 L15.1200069,4.08972931 Z"));

    public static Lazy<StreamGeometry> BatteryLevel = new(() => StreamGeometry.Parse(
        "M17,6 C18.6569,6 20,7.34315 20,9 L20,10 L21.0003237,10 C21.1824237,10 21.3532237,10.0487 21.5003237,10.1338 C21.7992237,10.3067 22.0003237,10.6299 22.0003237,11 L22.0003237,13 C22.0003237,13.3701 21.7992237,13.6933 21.5003237,13.8662 C21.3532237,13.9513 21.1824237,14 21.0003237,14 L20,14 L20,15 C20,16.6569 18.6569,18 17,18 L4.99967629,18 C3.34282629,18 1.99967629,16.6569 1.99967629,15 L1.99967629,9 C1.99967629,7.34315 3.34282629,6 4.99967629,6 L17,6 Z M16.998153,7.5 L4.99967629,7.5 C4.21997746,7.5 3.57922729,8.09488554 3.50654284,8.85553954 L3.49967629,9 L3.49967629,15 C3.49967629,15.7796706 4.09456182,16.4204457 4.85521583,16.4931332 L4.99967629,16.5 L16.998153,16.5 C17.7778236,16.5 18.4185987,15.9050879 18.4912862,15.1444558 L18.498153,15 L18.498153,9 C18.498153,8.22030118 17.9032409,7.579551 17.1426088,7.50686655 L16.998153,7.5 Z M5.99967629,9 L14,9 C14.51285,9 14.9355092,9.38604429 14.9932725,9.88337975 L15,10 L15,14 C15,14.51285 14.613973,14.9355092 14.1166239,14.9932725 L14,15 L5.99967629,15 C5.48683557,15 5.06416843,14.613973 5.00640394,14.1166239 L4.99967629,14 L4.99967629,10 C4.99967629,9.48716857 5.38572057,9.06449347 5.88305604,9.0067278 L5.99967629,9 L14,9 L5.99967629,9 Z"));
}